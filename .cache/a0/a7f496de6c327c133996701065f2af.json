{"id":"node_modules/d3-selection/src/selection/iterator.js","dependencies":[{"name":"/project/graph-render-and-path-find/package.json","includedInParent":true,"mtime":1676334398160},{"name":"/project/graph-render-and-path-find/node_modules/d3-selection/package.json","includedInParent":true,"mtime":1676334411420}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _callee;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(_callee);\nfunction _callee() {\n  var groups, j, m, group, i, n, node;\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        groups = this._groups, j = 0, m = groups.length;\n      case 1:\n        if (!(j < m)) {\n          _context.next = 13;\n          break;\n        }\n        group = groups[j], i = 0, n = group.length;\n      case 3:\n        if (!(i < n)) {\n          _context.next = 10;\n          break;\n        }\n        if (!(node = group[i])) {\n          _context.next = 7;\n          break;\n        }\n        _context.next = 7;\n        return node;\n      case 7:\n        ++i;\n        _context.next = 3;\n        break;\n      case 10:\n        ++j;\n        _context.next = 1;\n        break;\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, this);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":47},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":1,"column":15}},{"generated":{"line":11,"column":2},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":1,"column":15}},{"generated":{"line":12,"column":2},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":1,"column":15}},{"generated":{"line":13,"column":4},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":1,"column":15}},{"generated":{"line":14,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":1,"column":15}},{"generated":{"line":15,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":11},"name":"groups"},{"generated":{"line":15,"column":14},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":17}},{"generated":{"line":15,"column":17},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":20}},{"generated":{"line":15,"column":21},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":24}},{"generated":{"line":15,"column":22},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":25},"name":"_groups"},{"generated":{"line":15,"column":29},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":32}},{"generated":{"line":15,"column":31},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":34},"name":"j"},{"generated":{"line":15,"column":32},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":35}},{"generated":{"line":15,"column":35},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":38}},{"generated":{"line":15,"column":36},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":39}},{"generated":{"line":15,"column":38},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":41},"name":"m"},{"generated":{"line":15,"column":39},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":42}},{"generated":{"line":15,"column":42},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":45},"name":"groups"},{"generated":{"line":15,"column":48},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":51}},{"generated":{"line":15,"column":49},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":52},"name":"length"},{"generated":{"line":15,"column":55},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":58}},{"generated":{"line":16,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":58}},{"generated":{"line":17,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":58}},{"generated":{"line":17,"column":14},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":60},"name":"j"},{"generated":{"line":17,"column":15},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":61}},{"generated":{"line":17,"column":18},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":64},"name":"m"},{"generated":{"line":17,"column":19},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":65}},{"generated":{"line":18,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":65}},{"generated":{"line":19,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":65}},{"generated":{"line":20,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":65}},{"generated":{"line":21,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":13},"name":"group"},{"generated":{"line":21,"column":13},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":18}},{"generated":{"line":21,"column":16},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":21},"name":"groups"},{"generated":{"line":21,"column":22},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":27}},{"generated":{"line":21,"column":23},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":28},"name":"j"},{"generated":{"line":21,"column":24},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":29}},{"generated":{"line":21,"column":25},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":30}},{"generated":{"line":21,"column":27},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":32},"name":"i"},{"generated":{"line":21,"column":28},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":33}},{"generated":{"line":21,"column":31},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":36}},{"generated":{"line":21,"column":32},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":37}},{"generated":{"line":21,"column":34},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":39},"name":"n"},{"generated":{"line":21,"column":35},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":40}},{"generated":{"line":21,"column":38},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":43},"name":"group"},{"generated":{"line":21,"column":43},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":48}},{"generated":{"line":21,"column":44},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":49},"name":"length"},{"generated":{"line":21,"column":50},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":55}},{"generated":{"line":22,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":55}},{"generated":{"line":23,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":55}},{"generated":{"line":23,"column":14},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":63},"name":"i"},{"generated":{"line":23,"column":15},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":64}},{"generated":{"line":23,"column":18},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":67},"name":"n"},{"generated":{"line":23,"column":19},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":68}},{"generated":{"line":24,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":68}},{"generated":{"line":25,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":68}},{"generated":{"line":26,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":68}},{"generated":{"line":27,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":68}},{"generated":{"line":27,"column":14},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":10},"name":"node"},{"generated":{"line":27,"column":18},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":14}},{"generated":{"line":27,"column":21},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":17},"name":"group"},{"generated":{"line":27,"column":26},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":22}},{"generated":{"line":27,"column":27},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":23},"name":"i"},{"generated":{"line":27,"column":28},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":24}},{"generated":{"line":27,"column":29},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":25}},{"generated":{"line":28,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":25}},{"generated":{"line":29,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":25}},{"generated":{"line":30,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":25}},{"generated":{"line":31,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":25}},{"generated":{"line":32,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":27}},{"generated":{"line":32,"column":15},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":33},"name":"node"},{"generated":{"line":32,"column":19},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":37}},{"generated":{"line":33,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":4,"column":37}},{"generated":{"line":34,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":70}},{"generated":{"line":34,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":72},"name":"i"},{"generated":{"line":34,"column":11},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":73}},{"generated":{"line":35,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":73}},{"generated":{"line":36,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":73}},{"generated":{"line":37,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":3,"column":73}},{"generated":{"line":38,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":67}},{"generated":{"line":38,"column":10},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":69},"name":"j"},{"generated":{"line":38,"column":11},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":39,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":40,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":41,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":42,"column":6},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":43,"column":8},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":44,"column":4},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":45,"column":2},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}},{"generated":{"line":46,"column":0},"source":"node_modules/d3-selection/src/selection/iterator.js","original":{"line":2,"column":70}}],"sources":{"node_modules/d3-selection/src/selection/iterator.js":"export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"2864d4e134392ca46b516e489c7a4917","cacheData":{"env":{}}}